 /*
  Auther: Leo Lu
  Question 1: What's the output if we get a null input
  Time complexicity: O(n)
  Space complexitty: O(n)
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        ArrayList<List<Integer>> ret = new ArrayList();
        if (null == root) return ret;
        LinkedList<TreeNode> list = new LinkedList();
        list.add(root);
        ArrayList<Integer> subList = null;
        TreeNode nextLayerNode = root;
        while (!list.isEmpty()) {
            TreeNode node = list.remove();
            if (nextLayerNode == node) {
                subList = new ArrayList();
                ret.add(subList);
                nextLayerNode = null;
            }
            subList.add(node.val);
            if (null != node.left) {
                list.add(node.left);
                if (null == nextLayerNode) nextLayerNode = node.left;
            }
            if (null != node.right) {
                list.add(node.right);
                if (null == nextLayerNode) nextLayerNode = node.right;
            }
        }
        return ret;
    }
}
